#version 460 core

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

uniform ivec2 mouse;
uniform bool click;
uniform int cycle;

layout(rgba32f, binding = 0) uniform image2D inputImage;
layout(rgba32f, binding = 1) uniform image2D outputImage;

const ivec2 shift[4] = {
    ivec2(0, 0),
    ivec2(0, 1),
    ivec2(1, 0),
    ivec2(1, 1)
};

const vec4 colorMap[4] = {
    vec4(1.0, 0.0, 0.0, 1.0),
    vec4(0.0, 1.0, 0.0, 1.0),
    vec4(0.0, 0.0, 1.0, 1.0),
    vec4(0.0, 0.0, 0.0, 1.0)
};

const int stateResolve[] = {0, 1, 1, 3, 4, 5, 5, 7, 4, 5, 5, 7, 12, 13, 13, 15};

float random(vec2 uv)
{
    return fract(sin(dot(uv, vec2(12.9898,78.233)))*43758.5453123);
}

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 screenSize = imageSize(inputImage);

    vec2 uv = vec2(texelCoord) / vec2(screenSize);

    ivec2 blockCoord = 2 * ivec2(texelCoord.xy / 2);
    blockCoord += shift[cycle];

    vec4 grid[] = {
        imageLoad(inputImage, blockCoord + shift[0]),
        imageLoad(inputImage, blockCoord + shift[1]),
        imageLoad(inputImage, blockCoord + shift[2]),
        imageLoad(inputImage, blockCoord + shift[3])
    };

    int state = 0;

    state |= (grid[0].r != 0.0) ? 8 : 0;
    state |= (grid[1].r != 0.0) ? 4 : 0;
    state |= (grid[2].r != 0.0) ? 2 : 0;
    state |= (grid[3].r != 0.0) ? 1 : 0;

    int outputState = stateResolve[state];

    if (outputState == 12 || outputState == 3) {
        if (random(uv) > 0.5) {
            outputState = 5;
        }
    }

    imageStore(outputImage, blockCoord + shift[0], (outputState & 8) != 0 ? vec4(1.0) : vec4(0.0));
    imageStore(outputImage, blockCoord + shift[1], (outputState & 4) != 0 ? vec4(1.0) : vec4(0.0));
    imageStore(outputImage, blockCoord + shift[2], (outputState & 2) != 0 ? vec4(1.0) : vec4(0.0));
    imageStore(outputImage, blockCoord + shift[3], (outputState & 1) != 0 ? vec4(1.0) : vec4(0.0));

    for (int i = 0; i < 4; i++) {
        ivec2 coord = blockCoord + shift[i];
        if (click) {
            if (coord == mouse) {
                imageStore(outputImage, coord, vec4(1.0));
            }
        }
        if ((any(equal(coord, screenSize - ivec2(1.0))) || any(equal(coord, screenSize - ivec2(2.0)))) && imageLoad(inputImage, coord).r == 1.0) {
            imageStore(outputImage, coord, vec4(1.0));
        }
    }
}